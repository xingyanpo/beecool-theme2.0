<style>
  .x-warp {
    width: 100%;
    max-width: 1600px;
    margin: 0 auto;
  }
  .troubleshooting-warap {
    width: 100%;
    padding: 50px 0;
    display:flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  .troubleshooting-left > h1 {
    border-bottom: 1px solid #eee;
    padding: 0 0 10px 0;
  }
  .troubleshooting-left-wrap h2 {
    font-size: 18px;
    color:#333;
    font-weight: 500;
    line-height: 4;
    border-bottom: 1px solid #eee;
  }
  .troubleshooting-left-wrap > h2:hover {
    color: #2a408e;
    cursor:pointer;
  }
  .troubleshooting-left-content {
    display:grid;
  }
  .troubleshooting-left-subtitle {
    padding-left: 10px;
    line-height: 2;
    display:flex;
    align-items: center;
  }
  .troubleshooting-left-subtitle > svg {
    width: 16px;
    height: 16px;
  }
  .troubleshooting-left-subtitle > a {
    padding:10px 0 0 6px ;
    line-height:1.2;
  }
  .troubleshooting-left-subtitle:hover {
    color: #2a408e;
  } 
  .troubleshooting-left-subtitle:hover > svg {
    fill: 2a408e;
  }
  .troubleshooting-left {
    width: 50%
  }
  .troubleshooting-right {
    width: 30%;
  }
  .article-count {
    padding: 10px 0 0;
    color: #000;
    font-weight: 500;
  }
  .drop-down-title {
    cursor: pointer;
    user-select: none;
    display:flex;
    justify-content:space-between;
    align-items:center;
  }
  .drop-down-title > svg {
    transform: rotate(0deg);
    transition: all 0.3s ease 0s;
  }
  .drop-down-content {
    height: 0;
    overflow:hidden;
  }
  .troubleshooting-header {
    height: 80px;
    width:100%;
    background-color: #F9F8FF;
  }
  .troubleshooting-header-warap {
    padding:0;
    width:100%;
    height: 100%;
    display:flex;
    justify-content:space-between;
    align-itmes:center;
  }
  .troubleshooting-header-left {
    height: 100%;
    display: flex;
    align-items:center;
    padding:0;
    margin:0;
    flex:1;
  }
  .troubleshooting-header-right {
    width:20%;
    display:flex;
    align-items:center;
  }
  .troubleshooting-header-input {
    height:40px;
    flex:1;
    padding: 0 15px;
    border:1px solid #8C8DB9;
    border-radius: 30px;
    background-color:#FFF;
  }
  .troubleshooting-header-input > input {
    width:100%;
    height: 100%;
    border:none;
    background:none;
  }

  @media screen and (max-width: 768px) {
    .x-warp {
      width: 92%;
    }
     .troubleshooting-left {
      width: 100%
    }
  .troubleshooting-right {
    width: 100%;
  }
  }
</style>


<div class='troubleshooting-header'>
  <div class='x-warp troubleshooting-header-warap'>
    <div class='troubleshooting-header-left'>
      <h1>SUPPORT</h1>
    </div>
    <div class="troubleshooting-header-right">
      <div class='troubleshooting-header-input'>
        <input placeholder='Please enter your search term'/>
      </div>
    </div>
  </div>
</div>

<div id="troubleshooting" class='x-warp'>
  <div class='troubleshooting-warap'>
    <div class='troubleshooting-left'>
      <h1>{{ page.title }}</h1>
      <div class='troubleshooting-left-wrap drop-down' v-for="item of data">
        <div class='drop-down-title'>
          <h2 >[[item.title]]</h2>
          <svg t="1680577844917" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4004" width="25" height="25"><path d="M736 480c-12.5-12.5-32.8-12.5-45.3 0L523.3 647.4c-6.2 6.2-16.4 6.2-22.6 0L333.3 480c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 704c25 25 65.5 25 90.5 0L736 525.3c12.5-12.5 12.5-32.8 0-45.3z" p-id="4005"></path></svg>
        </div>
        <div  class='troubleshooting-left-content drop-down-content'>
          <div class='troubleshooting-left-subtitle' v-for="ite of item.content">
            <svg t="1680507468097" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3700" width="200" height="200"><path d="M512 832a320 320 0 1 1 320-320 320 320 0 0 1-320 320z m0-554.666667a234.666667 234.666667 0 1 0 234.666667 234.666667A235.093333 235.093333 0 0 0 512 277.333333z" p-id="3701"></path></svg>
            <a :href="handleLink(ite.link)">[[ite.title]]</a>
          </div>
          <div class='article-count'>[[articleCount(item.content.length)]]</div>
        </div>
      </div>
    </div>
    <div class='troubleshooting-right'>
    </div>
  </div>
</div>


<script src="https://cdn.shopifycdn.net/s/files/1/0554/7098/1274/files/vue.global.prod.js?v=1680503412"></script>
<script>
 {
    const { createApp } = Vue
    createApp({
        delimiters: ['[[', ']]'],
        data() {
            return {
                data: {{ page.metafields.custom.troubleshooting }}
            }
        },
      methods: {
        articleCount(value) {
          return value === 1 ? `All ${value} article` : `All ${value} articles`
        },
        handleLink (link) {
          return '/pages/' + link
        },
         drowDown () {
          let lists = document.querySelectorAll('.drop-down')
          lists.forEach((item, index) => {
            let title = item.querySelector('.drop-down-title')
            let svg = item.querySelector('.drop-down-title > svg')
            let content = item.querySelector('.drop-down-content')
            title.onclick = () => {
              if (content.offsetHeight === 0) {
                content.style.transition = 'none'
                content.style.height = 'auto'
                const height = content.offsetHeight
                content.style.height = 0
                content.offsetHeight
                svg.style.transform = 'rotate(180deg)'
                content.style.transition = '0.3s';
                content.style.height = height + 'px'
              } else {
                svg.style.transform = 'rotate(0deg)'
                content.style.transition = '0.3s'
                content.style.height = 0;
              }
            }
          })
          }
      },
      mounted() {
        this.drowDown()
      }
    }).mount('#troubleshooting')
}
</script>
{% schema %}
  {
    "name": "Troubleshooting",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      }
    ],
    "presets": [
      {
        "name": "Troubleshooting"
      }
    ]
  }
{% endschema %}